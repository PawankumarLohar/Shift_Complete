

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 26 01:52:49 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	10LF322
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC10LF322 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0020                     	;# 
    89  0020                     	;# 
    90  0021                     	;# 
    91  0022                     	;# 
    92  0022                     	;# 
    93  0023                     	;# 
    94  0024                     	;# 
    95  0025                     	;# 
    96  0026                     	;# 
    97  0027                     	;# 
    98  0027                     	;# 
    99  0028                     	;# 
   100  0029                     	;# 
   101  002A                     	;# 
   102  002A                     	;# 
   103  002B                     	;# 
   104  002C                     	;# 
   105  002D                     	;# 
   106  002E                     	;# 
   107  0030                     	;# 
   108  0031                     	;# 
   109  0032                     	;# 
   110  0033                     	;# 
   111  0034                     	;# 
   112  0035                     	;# 
   113  0036                     	;# 
   114  0037                     	;# 
   115  0038                     	;# 
   116  0039                     	;# 
   117  003A                     	;# 
   118  003B                     	;# 
   119  003C                     	;# 
   120  003D                     	;# 
   121  003E                     	;# 
   122  003F                     	;# 
   123  0010                     _OSCCONbits	set	16
   124  0012                     _PR2	set	18
   125  000D                     _PIE1bits	set	13
   126  0001                     _TMR0	set	1
   127  0009                     _WPUAbits	set	9
   128  000E                     _OPTION_REGbits	set	14
   129  0008                     _ANSELAbits	set	8
   130  0006                     _TRISAbits	set	6
   131  0007                     _LATAbits	set	7
   132  0013                     _T2CONbits	set	19
   133  0005                     _PORTAbits	set	5
   134  000B                     _INTCONbits	set	11
   135  000C                     _PIR1bits	set	12
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  000B                     start_initialization:	
   141  000B                     __initialization:	
   142                           
   143                           ; Clear objects allocated to BANK0
   144  000B  01CD               	clrf	__pbssBANK0& (0+127)
   145  000C  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   146  000D  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   147  000E  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   148  000F  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   149  0010  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   150  0011  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   151  0012  01D4               	clrf	(__pbssBANK0+7)& (0+127)
   152  0013  01D5               	clrf	(__pbssBANK0+8)& (0+127)
   153  0014  01D6               	clrf	(__pbssBANK0+9)& (0+127)
   154  0015                     end_of_initialization:	
   155                           ;End of C runtime variable initialization code
   156                           
   157  0015                     __end_of__initialization:	
   158  0015  0183               	clrf	3
   159  0016  2871               	ljmp	_main	;jump to C main() function
   160                           
   161                           	psect	bssBANK0
   162  004D                     __pbssBANK0:	
   163  004D                     _SecondCounter:	
   164  004D                     	ds	2
   165  004F                     _MsecCounter:	
   166  004F                     	ds	2
   167  0051                     _TimerCounter:	
   168  0051                     	ds	1
   169  0052                     _ShiftStarted:	
   170  0052                     	ds	1
   171  0053                     _ShiftComplete:	
   172  0053                     	ds	1
   173  0054                     _HourCounter:	
   174  0054                     	ds	1
   175  0055                     _HalfHourCounter:	
   176  0055                     	ds	1
   177  0056                     _MinuteCounter:	
   178  0056                     	ds	1
   179                           
   180                           	psect	cstackCOMMON
   181  0000                     __pcstackCOMMON:	
   182  0000                     ??_clock_config:	
   183  0000                     ??_gpio_config:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0000                     ??_timer_0_config:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0000                     ??_externalInterruptInit:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0000                     ??_timer_2_config:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           	psect	cstackBANK0
   197  0040                     __pcstackBANK0:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0040                     ?_hour_indication:	
   201  0040                     ??_hour_indication:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0040                     ?_clock_config:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0040                     ?_gpio_config:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0040                     ?_timer_0_config:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0040                     ?_externalInterruptInit:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0040                     ?_timer_2_config:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0040                     ?_start_sequence:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0040                     ?_isr_routine:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0040                     ?_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 1 bytes @ 0x0
   230  0040                     	ds	2
   231  0042                     hour_indication@hour:	
   232                           
   233                           ; 1 bytes @ 0x2
   234  0042                     	ds	1
   235  0043                     ??_isr_routine:	
   236                           
   237                           ; 1 bytes @ 0x3
   238  0043                     	ds	3
   239  0046                     _isr_routine$292:	
   240                           
   241                           ; 2 bytes @ 0x6
   242  0046                     	ds	2
   243  0048                     ??_start_sequence:	
   244                           
   245                           ; 1 bytes @ 0x8
   246  0048                     	ds	2
   247  004A                     start_sequence@i:	
   248                           
   249                           ; 1 bytes @ 0xA
   250  004A                     	ds	1
   251  004B                     ??_main:	
   252                           
   253                           ; 1 bytes @ 0xB
   254  004B                     	ds	2
   255                           
   256                           	psect	maintext
   257  0071                     __pmaintext:	
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 100 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0, pclath, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : B00/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0
   277 ;;      Params:         0       0
   278 ;;      Locals:         0       0
   279 ;;      Temps:          0       2
   280 ;;      Totals:         0       2
   281 ;;Total ram usage:        2 bytes
   282 ;; Hardware stack levels required when called:    3
   283 ;; This function calls:
   284 ;;		_clock_config
   285 ;;		_externalInterruptInit
   286 ;;		_gpio_config
   287 ;;		_start_sequence
   288 ;;		_timer_0_config
   289 ;;		_timer_2_config
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _main
   297  0071                     _main:	
   298                           
   299                           ;main.c: 102:   clock_config();
   300                           
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   303  0071  20F9               	fcall	_clock_config
   304                           
   305                           ;main.c: 103:   gpio_config();
   306  0072  20DD               	fcall	_gpio_config
   307                           
   308                           ;main.c: 104:   timer_0_config();
   309  0073  20EA               	fcall	_timer_0_config
   310                           
   311                           ;main.c: 105:   externalInterruptInit() ;
   312  0074  20F3               	fcall	_externalInterruptInit
   313                           
   314                           ;main.c: 106:   timer_2_config();
   315  0075  20CF               	fcall	_timer_2_config
   316  0076                     l870:	
   317                           
   318                           ;main.c: 110:         if(ShiftStarted == 1){
   319  0076  0352               	decf	_ShiftStarted,w	;volatile
   320  0077  1D03               	btfss	3,2
   321  0078  287C               	goto	l878
   322                           
   323                           ;main.c: 111:             ShiftStarted=0;
   324  0079  01D2               	clrf	_ShiftStarted	;volatile
   325                           
   326                           ;main.c: 112:             start_sequence();
   327  007A  2096               	fcall	_start_sequence
   328                           
   329                           ;main.c: 113:             timer_2_config();
   330  007B  20CF               	fcall	_timer_2_config
   331  007C                     l878:	
   332                           
   333                           ;main.c: 116:             if (ShiftComplete==1){
   334  007C  0353               	decf	_ShiftComplete,w	;volatile
   335  007D  1D03               	btfss	3,2
   336  007E  2876               	goto	l870
   337                           
   338                           ;main.c: 117:                 LATAbits.LATA1=1;
   339  007F  1487               	bsf	7,1	;volatile
   340                           
   341                           ;main.c: 118:                 LATAbits.LATA0=1;
   342  0080  1407               	bsf	7,0	;volatile
   343                           
   344                           ;main.c: 119:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   345  0081  3031               	movlw	49
   346  0082  00CC               	movwf	??_main+1
   347  0083  30B2               	movlw	178
   348  0084  00CB               	movwf	??_main
   349  0085                     u297:	
   350  0085  0BCB               	decfsz	??_main,f
   351  0086  2885               	goto	u297
   352  0087  0BCC               	decfsz	??_main+1,f
   353  0088  2885               	goto	u297
   354  0089  0000               	nop
   355                           
   356                           ;main.c: 120:                 LATAbits.LATA1=0;
   357  008A  1087               	bcf	7,1	;volatile
   358                           
   359                           ;main.c: 121:                 LATAbits.LATA0=0;
   360  008B  1007               	bcf	7,0	;volatile
   361                           
   362                           ;main.c: 122:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   363  008C  3031               	movlw	49
   364  008D  00CC               	movwf	??_main+1
   365  008E  30B2               	movlw	178
   366  008F  00CB               	movwf	??_main
   367  0090                     u307:	
   368  0090  0BCB               	decfsz	??_main,f
   369  0091  2890               	goto	u307
   370  0092  0BCC               	decfsz	??_main+1,f
   371  0093  2890               	goto	u307
   372  0094  0000               	nop
   373  0095  2876               	goto	l870
   374  0096                     __end_of_main:	
   375                           
   376                           	psect	text1
   377  00CF                     __ptext1:	
   378 ;; *************** function _timer_2_config *****************
   379 ;; Defined at:
   380 ;;		line 160 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0
   394 ;;      Params:         0       0
   395 ;;      Locals:         0       0
   396 ;;      Temps:          0       0
   397 ;;      Totals:         0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    2
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _timer_2_config
   410  00CF                     _timer_2_config:	
   411                           
   412                           ;main.c: 162:     INTCONbits.PEIE = 1;
   413                           
   414                           ;incstack = 0
   415                           ; Regs used in _timer_2_config: [wreg]
   416  00CF  170B               	bsf	11,6	;volatile
   417                           
   418                           ;main.c: 163:     T2CONbits.TMR2ON=0;
   419  00D0  1113               	bcf	19,2	;volatile
   420                           
   421                           ;main.c: 164:     PIR1bits.TMR2IF=0;
   422  00D1  108C               	bcf	12,1	;volatile
   423                           
   424                           ;main.c: 165:     T2CONbits.T2CKPS0=0;
   425  00D2  1013               	bcf	19,0	;volatile
   426                           
   427                           ;main.c: 167:     T2CONbits.T2CKPS1=0;
   428  00D3  1093               	bcf	19,1	;volatile
   429                           
   430                           ;main.c: 169:     T2CONbits.TOUTPS3=0;
   431  00D4  1313               	bcf	19,6	;volatile
   432                           
   433                           ;main.c: 170:     T2CONbits.TOUTPS2=0;
   434  00D5  1293               	bcf	19,5	;volatile
   435                           
   436                           ;main.c: 171:     T2CONbits.TOUTPS1=0;
   437  00D6  1213               	bcf	19,4	;volatile
   438                           
   439                           ;main.c: 172:     T2CONbits.TOUTPS0=0;
   440  00D7  1193               	bcf	19,3	;volatile
   441                           
   442                           ;main.c: 174:     PIE1bits.TMR2IE =1;
   443  00D8  148D               	bsf	13,1	;volatile
   444                           
   445                           ;main.c: 175:     PR2=0xff;
   446  00D9  30FF               	movlw	255
   447  00DA  0092               	movwf	18	;volatile
   448                           
   449                           ;main.c: 176:     T2CONbits.TMR2ON=1;
   450  00DB  1513               	bsf	19,2	;volatile
   451  00DC  0008               	return
   452  00DD                     __end_of_timer_2_config:	
   453                           
   454                           	psect	text2
   455  00EA                     __ptext2:	
   456 ;; *************** function _timer_0_config *****************
   457 ;; Defined at:
   458 ;;		line 145 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		status,2
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0
   472 ;;      Params:         0       0
   473 ;;      Locals:         0       0
   474 ;;      Temps:          0       0
   475 ;;      Totals:         0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    2
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _timer_0_config
   488  00EA                     _timer_0_config:	
   489                           
   490                           ;main.c: 148:     TMR0=0;
   491                           
   492                           ;incstack = 0
   493                           ; Regs used in _timer_0_config: [status,2]
   494  00EA  0181               	clrf	1	;volatile
   495                           
   496                           ;main.c: 150:     INTCONbits.TMR0IF=0;
   497  00EB  110B               	bcf	11,2	;volatile
   498                           
   499                           ;main.c: 151:     INTCONbits.TMR0IE=1;
   500  00EC  168B               	bsf	11,5	;volatile
   501                           
   502                           ;main.c: 152:     OPTION_REGbits.T0CS=0;
   503  00ED  128E               	bcf	14,5	;volatile
   504                           
   505                           ;main.c: 153:     OPTION_REGbits.PSA=0;
   506  00EE  118E               	bcf	14,3	;volatile
   507                           
   508                           ;main.c: 154:     OPTION_REGbits.PS0=1;
   509  00EF  140E               	bsf	14,0	;volatile
   510                           
   511                           ;main.c: 155:     OPTION_REGbits.PS1=1;
   512  00F0  148E               	bsf	14,1	;volatile
   513                           
   514                           ;main.c: 156:     OPTION_REGbits.PS2=1;
   515  00F1  150E               	bsf	14,2	;volatile
   516  00F2  0008               	return
   517  00F3                     __end_of_timer_0_config:	
   518                           
   519                           	psect	text3
   520  0096                     __ptext3:	
   521 ;; *************** function _start_sequence *****************
   522 ;; Defined at:
   523 ;;		line 197 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  i               1   10[BANK0 ] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0
   537 ;;      Params:         0       0
   538 ;;      Locals:         0       1
   539 ;;      Temps:          0       2
   540 ;;      Totals:         0       3
   541 ;;Total ram usage:        3 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    2
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _start_sequence
   553  0096                     _start_sequence:	
   554                           
   555                           ;main.c: 199:     for(uint8_t i=0; i<20;i++){
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _start_sequence: [wreg+status,2+status,0]
   559  0096  01CA               	clrf	start_sequence@i
   560  0097                     l103:	
   561                           
   562                           ;main.c: 200:         LATAbits.LATA1=1;
   563  0097  1487               	bsf	7,1	;volatile
   564                           
   565                           ;main.c: 201:         LATAbits.LATA0=1;
   566  0098  1407               	bsf	7,0	;volatile
   567                           
   568                           ;main.c: 202:         _delay((unsigned long)((50)*(1000000/4000.0)));
   569  0099  3011               	movlw	17
   570  009A  00C9               	movwf	??_start_sequence+1
   571  009B  303A               	movlw	58
   572  009C  00C8               	movwf	??_start_sequence
   573  009D                     u317:	
   574  009D  0BC8               	decfsz	??_start_sequence,f
   575  009E  289D               	goto	u317
   576  009F  0BC9               	decfsz	??_start_sequence+1,f
   577  00A0  289D               	goto	u317
   578  00A1  0000               	nop
   579                           
   580                           ;main.c: 203:         LATAbits.LATA1=0;
   581  00A2  1087               	bcf	7,1	;volatile
   582                           
   583                           ;main.c: 204:        LATAbits.LATA0=0;
   584  00A3  1007               	bcf	7,0	;volatile
   585                           
   586                           ;main.c: 205:         _delay((unsigned long)((50)*(1000000/4000.0)));
   587  00A4  3011               	movlw	17
   588  00A5  00C9               	movwf	??_start_sequence+1
   589  00A6  303A               	movlw	58
   590  00A7  00C8               	movwf	??_start_sequence
   591  00A8                     u327:	
   592  00A8  0BC8               	decfsz	??_start_sequence,f
   593  00A9  28A8               	goto	u327
   594  00AA  0BC9               	decfsz	??_start_sequence+1,f
   595  00AB  28A8               	goto	u327
   596  00AC  0000               	nop
   597                           
   598                           ;main.c: 206:     }
   599  00AD  3001               	movlw	1
   600  00AE  00C8               	movwf	??_start_sequence
   601  00AF  0848               	movf	??_start_sequence,w
   602  00B0  07CA               	addwf	start_sequence@i,f
   603  00B1  3014               	movlw	20
   604  00B2  024A               	subwf	start_sequence@i,w
   605  00B3  1803               	btfsc	3,0
   606  00B4  0008               	return
   607  00B5  2897               	goto	l103
   608  00B6                     __end_of_start_sequence:	
   609                           
   610                           	psect	text4
   611  00DD                     __ptext4:	
   612 ;; *************** function _gpio_config *****************
   613 ;; Defined at:
   614 ;;		line 128 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		None
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0
   628 ;;      Params:         0       0
   629 ;;      Locals:         0       0
   630 ;;      Temps:          0       0
   631 ;;      Totals:         0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    2
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _gpio_config
   644  00DD                     _gpio_config:	
   645                           
   646                           ;main.c: 129:     TRISAbits.TRISA0 = 0;
   647                           
   648                           ;incstack = 0
   649                           ; Regs used in _gpio_config: []
   650  00DD  1006               	bcf	6,0	;volatile
   651                           
   652                           ;main.c: 130:     TRISAbits.TRISA1 = 0;
   653  00DE  1086               	bcf	6,1	;volatile
   654                           
   655                           ;main.c: 131:     TRISAbits.TRISA2 = 1;
   656  00DF  1506               	bsf	6,2	;volatile
   657                           
   658                           ;main.c: 132:     LATAbits.LATA0 = 0;
   659  00E0  1007               	bcf	7,0	;volatile
   660                           
   661                           ;main.c: 134:     ANSELAbits.ANSA0 = 0;
   662  00E1  1008               	bcf	8,0	;volatile
   663                           
   664                           ;main.c: 135:     ANSELAbits.ANSA1 = 0;
   665  00E2  1088               	bcf	8,1	;volatile
   666                           
   667                           ;main.c: 136:     ANSELAbits.ANSA2 = 0;
   668  00E3  1108               	bcf	8,2	;volatile
   669                           
   670                           ;main.c: 137:     OPTION_REGbits.nWPUEN =0;
   671  00E4  138E               	bcf	14,7	;volatile
   672                           
   673                           ;main.c: 138:     WPUAbits.WPUA0 = 0;
   674  00E5  1009               	bcf	9,0	;volatile
   675                           
   676                           ;main.c: 139:     WPUAbits.WPUA1 = 1;
   677  00E6  1489               	bsf	9,1	;volatile
   678                           
   679                           ;main.c: 140:     WPUAbits.WPUA2 = 1;
   680  00E7  1509               	bsf	9,2	;volatile
   681                           
   682                           ;main.c: 141:     WPUAbits.WPUA3 = 0;
   683  00E8  1189               	bcf	9,3	;volatile
   684  00E9  0008               	return
   685  00EA                     __end_of_gpio_config:	
   686                           
   687                           	psect	text5
   688  00F3                     __ptext5:	
   689 ;; *************** function _externalInterruptInit *****************
   690 ;; Defined at:
   691 ;;		line 188 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		None
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0
   705 ;;      Params:         0       0
   706 ;;      Locals:         0       0
   707 ;;      Temps:          0       0
   708 ;;      Totals:         0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    2
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _externalInterruptInit
   721  00F3                     _externalInterruptInit:	
   722                           
   723                           ;main.c: 190:     INTCONbits.PEIE = 1;
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _externalInterruptInit: []
   727  00F3  170B               	bsf	11,6	;volatile
   728                           
   729                           ;main.c: 191:     INTCONbits.INTE = 1;
   730  00F4  160B               	bsf	11,4	;volatile
   731                           
   732                           ;main.c: 192:     OPTION_REGbits.INTEDG = 0;
   733  00F5  130E               	bcf	14,6	;volatile
   734                           
   735                           ;main.c: 193:     INTCONbits.INTF = 0;
   736  00F6  108B               	bcf	11,1	;volatile
   737                           
   738                           ;main.c: 194:     INTCONbits.GIE = 1;
   739  00F7  178B               	bsf	11,7	;volatile
   740  00F8  0008               	return
   741  00F9                     __end_of_externalInterruptInit:	
   742                           
   743                           	psect	text6
   744  00F9                     __ptext6:	
   745 ;; *************** function _clock_config *****************
   746 ;; Defined at:
   747 ;;		line 180 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		None
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0
   761 ;;      Params:         0       0
   762 ;;      Locals:         0       0
   763 ;;      Temps:          0       0
   764 ;;      Totals:         0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _clock_config
   777  00F9                     _clock_config:	
   778                           
   779                           ;main.c: 182:     OSCCONbits.IRCF2=0;
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _clock_config: []
   783  00F9  1310               	bcf	16,6	;volatile
   784                           
   785                           ;main.c: 183:     OSCCONbits.IRCF1=1;
   786  00FA  1690               	bsf	16,5	;volatile
   787                           
   788                           ;main.c: 184:     OSCCONbits.IRCF0=1;
   789  00FB  1610               	bsf	16,4	;volatile
   790  00FC  0008               	return
   791  00FD                     __end_of_clock_config:	
   792                           
   793                           	psect	text7
   794  0017                     __ptext7:	
   795 ;; *************** function _isr_routine *****************
   796 ;; Defined at:
   797 ;;		line 57 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0
   811 ;;      Params:         0       0
   812 ;;      Locals:         0       2
   813 ;;      Temps:          0       3
   814 ;;      Totals:         0       5
   815 ;;Total ram usage:        5 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		_hour_indication
   820 ;; This function is called by:
   821 ;;		Interrupt level 1
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _isr_routine
   827  0017                     _isr_routine:	
   828                           
   829                           ;main.c: 59:      if(PIR1bits.TMR2IF==1){
   830  0017  1C8C               	btfss	12,1	;volatile
   831  0018  2845               	goto	i1l840
   832                           
   833                           ;main.c: 61:          PIR1bits.TMR2IF=0;
   834  0019  108C               	bcf	12,1	;volatile
   835                           
   836                           ;main.c: 62:          MsecCounter++;
   837  001A  3001               	movlw	1
   838  001B  07CF               	addwf	_MsecCounter,f	;volatile
   839  001C  1803               	skipnc
   840  001D  0AD0               	incf	_MsecCounter+1,f	;volatile
   841  001E  3000               	movlw	0
   842  001F  07D0               	addwf	_MsecCounter+1,f	;volatile
   843                           
   844                           ;main.c: 64:             if(MsecCounter == 1000){
   845  0020  30E8               	movlw	232
   846  0021  064F               	xorwf	_MsecCounter,w	;volatile
   847  0022  3003               	movlw	3
   848  0023  1903               	skipnz
   849  0024  0650               	xorwf	_MsecCounter+1,w	;volatile
   850  0025  1D03               	btfss	3,2
   851  0026  282F               	goto	i1l826
   852                           
   853                           ;main.c: 65:                 SecondCounter++;
   854  0027  3001               	movlw	1
   855  0028  07CD               	addwf	_SecondCounter,f	;volatile
   856  0029  1803               	skipnc
   857  002A  0ACE               	incf	_SecondCounter+1,f	;volatile
   858  002B  3000               	movlw	0
   859  002C  07CE               	addwf	_SecondCounter+1,f	;volatile
   860                           
   861                           ;main.c: 66:                 MsecCounter=0;
   862  002D  01CF               	clrf	_MsecCounter	;volatile
   863  002E  01D0               	clrf	_MsecCounter+1	;volatile
   864  002F                     i1l826:	
   865                           
   866                           ;main.c: 68:                     if(SecondCounter == 60){
   867  002F  303C               	movlw	60
   868  0030  064D               	xorwf	_SecondCounter,w	;volatile
   869  0031  044E               	iorwf	_SecondCounter+1,w	;volatile
   870  0032  1D03               	btfss	3,2
   871  0033  283A               	goto	i1l832
   872                           
   873                           ;main.c: 69:                         MinuteCounter++;
   874  0034  3001               	movlw	1
   875  0035  00C3               	movwf	??_isr_routine
   876  0036  0843               	movf	??_isr_routine,w
   877  0037  07D6               	addwf	_MinuteCounter,f	;volatile
   878                           
   879                           ;main.c: 70:                         SecondCounter=0;
   880  0038  01CD               	clrf	_SecondCounter	;volatile
   881  0039  01CE               	clrf	_SecondCounter+1	;volatile
   882  003A                     i1l832:	
   883                           
   884                           ;main.c: 72:                         if(MinuteCounter == 30){
   885  003A  301E               	movlw	30
   886  003B  0656               	xorwf	_MinuteCounter,w	;volatile
   887  003C  1D03               	btfss	3,2
   888  003D  2845               	goto	i1l840
   889                           
   890                           ;main.c: 73:                             HalfHourCounter++;
   891  003E  3001               	movlw	1
   892  003F  00C3               	movwf	??_isr_routine
   893  0040  0843               	movf	??_isr_routine,w
   894  0041  07D5               	addwf	_HalfHourCounter,f	;volatile
   895                           
   896                           ;main.c: 74:                             hour_indication(HalfHourCounter);
   897  0042  0855               	movf	_HalfHourCounter,w	;volatile
   898  0043  20B6               	fcall	_hour_indication
   899                           
   900                           ;main.c: 75:                             MinuteCounter=0;
   901  0044  01D6               	clrf	_MinuteCounter	;volatile
   902  0045                     i1l840:	
   903                           
   904                           ;main.c: 80:     if(INTCONbits.TMR0IF==1){
   905  0045  1D0B               	btfss	11,2	;volatile
   906  0046  2857               	goto	i1l850
   907                           
   908                           ;main.c: 81:         INTCONbits.TMR0IF=0;
   909  0047  110B               	bcf	11,2	;volatile
   910                           
   911                           ;main.c: 82:         if(PORTAbits.RA2==0)
   912  0048  1905               	btfsc	5,2	;volatile
   913  0049  284E               	goto	i1l68
   914                           
   915                           ;main.c: 83:             TimerCounter++;
   916  004A  3001               	movlw	1
   917  004B  00C3               	movwf	??_isr_routine
   918  004C  0843               	movf	??_isr_routine,w
   919  004D  07D1               	addwf	_TimerCounter,f
   920  004E                     i1l68:	
   921                           
   922                           ;main.c: 84:             if(TimerCounter==20){
   923  004E  3014               	movlw	20
   924  004F  0651               	xorwf	_TimerCounter,w
   925  0050  1D03               	btfss	3,2
   926  0051  2857               	goto	i1l850
   927                           
   928                           ;main.c: 85:                 TimerCounter=0;
   929  0052  01D1               	clrf	_TimerCounter
   930                           
   931                           ;main.c: 86:                 ShiftStarted=1;
   932  0053  3001               	movlw	1
   933  0054  00C3               	movwf	??_isr_routine
   934  0055  0843               	movf	??_isr_routine,w
   935  0056  00D2               	movwf	_ShiftStarted	;volatile
   936  0057                     i1l850:	
   937                           
   938                           ;main.c: 91:     if(INTCONbits.INTF==1){
   939  0057  1C8B               	btfss	11,1	;volatile
   940  0058  286A               	goto	i1l75
   941                           
   942                           ;main.c: 92:         TimerCounter=0;
   943  0059  01D1               	clrf	_TimerCounter
   944                           
   945                           ;main.c: 93:         INTCONbits.INTF=0;
   946  005A  108B               	bcf	11,1	;volatile
   947                           
   948                           ;main.c: 94:         T2CONbits.TMR2ON=0;
   949  005B  1113               	bcf	19,2	;volatile
   950                           
   951                           ;main.c: 95:         ShiftComplete = ShiftComplete==1 ? 0:255;
   952  005C  0353               	decf	_ShiftComplete,w	;volatile
   953  005D  1903               	btfsc	3,2
   954  005E  2864               	goto	i1l862
   955  005F  30FF               	movlw	255
   956  0060  00C6               	movwf	_isr_routine$292
   957  0061  3000               	movlw	0
   958  0062  00C7               	movwf	_isr_routine$292+1
   959  0063  2866               	goto	i1l864
   960  0064                     i1l862:	
   961  0064  01C6               	clrf	_isr_routine$292
   962  0065  01C7               	clrf	_isr_routine$292+1
   963  0066                     i1l864:	
   964  0066  0846               	movf	_isr_routine$292,w
   965  0067  00C3               	movwf	??_isr_routine
   966  0068  0843               	movf	??_isr_routine,w
   967  0069  00D3               	movwf	_ShiftComplete	;volatile
   968  006A                     i1l75:	
   969  006A  0845               	movf	??_isr_routine+2,w
   970  006B  008A               	movwf	10
   971  006C  0E44               	swapf	(??_isr_routine+1)^0,w
   972  006D  0083               	movwf	3
   973  006E  0EFE               	swapf	126,f
   974  006F  0E7E               	swapf	126,w
   975  0070  0009               	retfie
   976  0071                     __end_of_isr_routine:	
   977                           
   978                           	psect	intentry
   979  0004                     __pintentry:	
   980                           ;incstack = 0
   981                           ; Regs used in _isr_routine: [wreg+status,2+status,0+pclath+cstack]
   982                           
   983  0004                     interrupt_function:	
   984  007E                     saved_w	set	btemp
   985  0004  00FE               	movwf	btemp
   986  0005  0E03               	swapf	3,w
   987  0006  00C4               	movwf	??_isr_routine+1
   988  0007  080A               	movf	10,w
   989  0008  00C5               	movwf	??_isr_routine+2
   990  0009  2817               	ljmp	_isr_routine
   991                           
   992                           	psect	text8
   993  00B6                     __ptext8:	
   994 ;; *************** function _hour_indication *****************
   995 ;; Defined at:
   996 ;;		line 209 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  hour            1    wreg     unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  hour            1    2[BANK0 ] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0
  1010 ;;      Params:         0       0
  1011 ;;      Locals:         0       1
  1012 ;;      Temps:          0       2
  1013 ;;      Totals:         0       3
  1014 ;;Total ram usage:        3 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_isr_routine
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _hour_indication
  1025  00B6                     _hour_indication:	
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _hour_indication: [wreg+status,2+status,0]
  1029                           ;hour_indication@hour stored from wreg
  1030  00B6  00C2               	movwf	hour_indication@hour
  1031                           
  1032                           ;main.c: 212:         if((hour%2)==0){
  1033  00B7  1842               	btfsc	hour_indication@hour,0
  1034  00B8  28C5               	goto	i1l764
  1035                           
  1036                           ;main.c: 214:                 LATAbits.LATA1=1;
  1037  00B9  1487               	bsf	7,1	;volatile
  1038                           
  1039                           ;main.c: 215:                 LATAbits.LATA0=1;
  1040  00BA  1407               	bsf	7,0	;volatile
  1041                           
  1042                           ;main.c: 216:                 _delay((unsigned long)((500)*(1000000/4000.0)));
  1043  00BB  30A3               	movlw	163
  1044  00BC  00C1               	movwf	??_hour_indication+1
  1045  00BD  3055               	movlw	85
  1046  00BE  00C0               	movwf	??_hour_indication
  1047  00BF                     u33_27:	
  1048  00BF  0BC0               	decfsz	??_hour_indication,f
  1049  00C0  28BF               	goto	u33_27
  1050  00C1  0BC1               	decfsz	??_hour_indication+1,f
  1051  00C2  28BF               	goto	u33_27
  1052                           
  1053                           ;main.c: 217:                 LATAbits.LATA1=0;
  1054  00C3  1087               	bcf	7,1	;volatile
  1055                           
  1056                           ;main.c: 218:                 LATAbits.LATA0=0;
  1057  00C4  1007               	bcf	7,0	;volatile
  1058  00C5                     i1l764:	
  1059                           
  1060                           ;main.c: 222:         if(hour==19){
  1061  00C5  3013               	movlw	19
  1062  00C6  0642               	xorwf	hour_indication@hour,w
  1063  00C7  1D03               	btfss	3,2
  1064  00C8  0008               	return
  1065                           
  1066                           ;main.c: 223:            ShiftComplete=1;
  1067  00C9  3001               	movlw	1
  1068  00CA  00C0               	movwf	??_hour_indication
  1069  00CB  0840               	movf	??_hour_indication,w
  1070  00CC  00D3               	movwf	_ShiftComplete	;volatile
  1071                           
  1072                           ;main.c: 224:            HalfHourCounter=0;
  1073  00CD  01D5               	clrf	_HalfHourCounter	;volatile
  1074  00CE  0008               	return
  1075  00CF                     __end_of_hour_indication:	
  1076  007E                     btemp	set	126	;btemp
  1077  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     13      23

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_start_sequence

Critical Paths under _isr_routine in BANK0

    _isr_routine->_hour_indication

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      46
                                             11 BANK0      2     2      0
                       _clock_config
              _externalInterruptInit
                        _gpio_config
                     _start_sequence
                     _timer_0_config
                     _timer_2_config
 ---------------------------------------------------------------------------------
 (1) _timer_2_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_0_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_sequence                                       3     3      0      46
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _gpio_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _externalInterruptInit                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clock_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr_routine                                          5     5      0      68
                                              3 BANK0      5     5      0
                    _hour_indication
 ---------------------------------------------------------------------------------
 (3) _hour_indication                                      3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clock_config
   _externalInterruptInit
   _gpio_config
   _start_sequence
   _timer_0_config
   _timer_2_config

 _isr_routine (ROOT)
   _hour_indication

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      D      17       3       37.1%
ABS                  0      0      17       4        0.0%
DATA                 0      0      17       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 26 01:52:49 2022

                ??_clock_config 0000                ??_timer_0_config 0000                ??_timer_2_config 0000  
                   __CFG_CP$OFF 0000                             l103 0097                             l870 0076  
                           l878 007C                             u307 0090                             u317 009D  
                           _PR2 0012                             u327 00A8                             u297 0085  
       __size_of_start_sequence 0020                    __CFG_BORV$LO 0000                    __CFG_LVP$OFF 0000  
                          i1l75 006A                            i1l68 004E                            _TMR0 0001  
                  __CFG_WRT$OFF 0000                            _main 0071                            btemp 007E  
                          start 000A                    ?_gpio_config 0040                   __CFG_MCLRE$ON 0000  
              ?_hour_indication 0040                           ?_main 0040                   __CFG_WDTE$OFF 0000  
                         i1l832 003A                           i1l840 0045                           i1l850 0057  
                         i1l826 002F                           i1l764 00C5                           i1l862 0064  
                         i1l864 0066                           u33_27 00BF                  __CFG_BOREN$OFF 0000  
                         pclath 000A                           status 0003                           wtemp0 007E  
         _externalInterruptInit 00F3                 __initialization 000B                    __end_of_main 0096  
                __CFG_LPBOR$OFF 0000                          ??_main 004B                    ?_isr_routine 0040  
          __end_of_clock_config 00FD                  __CFG_PWRTE$OFF 0000                  _start_sequence 0096  
               _isr_routine$292 0046                          saved_w 007E         __end_of__initialization 0015  
        ?_externalInterruptInit 0040                  __pcstackCOMMON 0000            __size_of_gpio_config 000D  
        __end_of_start_sequence 00B6                  _OPTION_REGbits 000E                     _HourCounter 0054  
                    __pbssBANK0 004D                     _MsecCounter 004F                      __pmaintext 0071  
                    __pintentry 0004                 ?_start_sequence 0040           __size_of_clock_config 0004  
          __size_of_isr_routine 005A                   _MinuteCounter 0056                   _SecondCounter 004D  
                  _clock_config 00F9                         __ptext1 00CF                         __ptext2 00EA  
                       __ptext3 0096                         __ptext4 00DD                         __ptext5 00F3  
                       __ptext6 00F9                         __ptext7 0017                         __ptext8 00B6  
                     _T2CONbits 0013         __size_of_timer_0_config 0009         __size_of_timer_2_config 000E  
      __size_of_hour_indication 0019            end_of_initialization 0015                       _PORTAbits 0005  
              __CFG_FOSC$INTOSC 0000                       _TRISAbits 0006                   _ShiftComplete 0053  
       ??_externalInterruptInit 0000             start_initialization 000B               ??_hour_indication 0040  
                 ??_gpio_config 0000                ??_start_sequence 0048                  _timer_0_config 00EA  
                     ___latbits 0000                  _timer_2_config 00CF                   __pcstackBANK0 0040  
           __end_of_gpio_config 00EA          __end_of_timer_0_config 00F3                   ??_isr_routine 0043  
        __end_of_timer_2_config 00DD               interrupt_function 0004                        _LATAbits 0007  
                      _PIE1bits 000D                        _PIR1bits 000C                 ?_timer_0_config 0040  
               ?_timer_2_config 0040                        _WPUAbits 0009             __end_of_isr_routine 0071  
                  _ShiftStarted 0052  __size_of_externalInterruptInit 0006   __end_of_externalInterruptInit 00F9  
                   _gpio_config 00DD                      _ANSELAbits 0008                 _hour_indication 00B6  
                  _TimerCounter 0051                   __size_of_main 0025                     _isr_routine 0017  
                    _INTCONbits 000B                        intlevel1 0000                      _OSCCONbits 0010  
           hour_indication@hour 0042                   ?_clock_config 0040                 _HalfHourCounter 0055  
       __end_of_hour_indication 00CF                 start_sequence@i 004A  
